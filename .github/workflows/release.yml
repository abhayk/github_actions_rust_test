name: release
on:
  push:
    tags:
      - v"[0-9]+.[0-9]+.[0-9]+"

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
  env:
    APP_NAME: hello_world
  outputs: 
    upload_url: ${{ steps.create_release.outputs.upload_url }}
  steps:
    - name: create-release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

  build-release:
    name: build-release
    needs: ['create-release']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, win-msvc, win-gnu]
        include:
          - build: linux
            os: ubuntu-latest
            binary: ${{ env.APP_NAME }}
          - build: macos
            os: macos-latest
            binary: ${{ env.APP_NAME }}
          - build: win-msvc
            os: windows-latest
            binary: ${{ env.APP_NAME }}.exe
          - build: win-gnu
            os: windows-latest
            binary: ${{ env.APP_NAME }}.exe
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build release binary
        run: cargo build --verbose --release

      - name: Strip release binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/release/${{ env.APP_NAME }}"

      - name: Upload release
        uses: actions/upoad-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_name: ${{ env.APP_NAME}}-${{ matrix.os }}
          asset_path: "target/release/${{ matrix.binary }}"
          asset_content_type: application/octet-stream

